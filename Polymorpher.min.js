// Polymorpher v. 1.02
!function(t,a,i){var n=Date.now||function(){return(new Date).getTime()};function e(t){if(this.element="string"==typeof t.element?a.getElementById(t.element):t.element,this.endPoints=t.endPoints,this.duration=t.duration,this.easing=t.easing,this.clock=0,this.is_to_animate=[],"object"==typeof this.element){for(var i in this.start_points=this.element.getAttribute("points").split(" "),this.start_points)for(var e in this.start_points[i]=this.start_points[i].split(","),this.start_points[i])this.start_points[i][e]=parseInt(this.start_points[i][e]);e=0;for(var i in this.endPoints=this.endPoints.split(" "),this.endPoints){for(var e in this.endPoints[i]=this.endPoints[i].split(","),this.is_to_animate[i]=[],this.endPoints[i])this.endPoints[i][e]=parseInt(this.endPoints[i][e]),this.endPoints[i][e]==this.start_points[i][e]?this.is_to_animate[i][e]=!1:this.is_to_animate[i][e]=!0;e++}this.start_points.length==this.endPoints.length?"number"==typeof this.duration?"string"==typeof this.easing?this.easing=function(t){if("ease-in-out"==t)return n;if("ease-in"==t)return s;if("ease-out"==t)return o;if("linear"==t)return r}(this.easing):console.error("WondzSVG : Le quatrième argument (easing) doit être une chaîne de caractères"):console.error("WondzSVG : Le troisième argument (durée) doit être de type numérique."):console.error("WondzSVG : Le deuxième argument n'a pas le même nombre de points que l'objet ciblé.")}else console.error("[Polymorpher] Le premier argument doit être un objet HTML (ex : document.getElementById('mask')).");function n(t,i,e,n){return(t/=n/2)<1?e/2*Math.pow(t,3)+i:e/2*(Math.pow(t-2,3)+2)+i}function s(t,i,e,n){return e*Math.pow(t/n,3)+i}function o(t,i,e,n){return e*(Math.pow(t/n-1,3)+1)+i}function r(t,i,e,n){return e*(t/n)+i}}e.prototype.start=function(){this.startTime=n(),this.morph()},e.prototype.morph=function(){this.clock=n()-this.startTime;var t="";for(var i in this.start_points){for(var e in this.start_points[i])this.is_to_animate[i][e]?t+=this.easing(this.clock,this.start_points[i][e],this.endPoints[i][e]-this.start_points[i][e],this.duration):t+=this.start_points[i][e],0==e&&(t+=",");i<this.start_points.length&&(t+=" ")}this.element.setAttribute("points",t),this.clock<this.duration&&requestAnimationFrame(this.morph.bind(this))},t.Polymorpher=e}(window,document);